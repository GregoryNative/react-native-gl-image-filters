{"version":3,"sources":["../../src/filters/Negative.js"],"names":["Negative","shaders","Shaders","create","negative","frag","GLSL","DefaultValue","factor","t","children"],"mappings":"grBAsBwBA,Q,iSAnBlBC,SAAUC,iBAAQC,MAAR,CAAe,CAC7BC,SAAU,CACRC,QAAMC,aAAN,kBADQ,CADmB,CAAf,C,CAiBHC,kCAAe,C,CAEb,QAASP,SAAT,GAA0D,SAAtCQ,MAAsC,CAAtCA,CAAsC,YAA7BD,YAA6B,GAALE,CAAK,GAAfC,QAAe,CACvE,MACE,+BAAC,aAAD,EACE,OAAQT,QAAQG,QADlB,CAEE,SAAU,CACRI,QADQ,CAERC,GAFQ,CAFZ,EAQH","file":"Negative.js","sourcesContent":["import { Shaders, Node, GLSL } from \"gl-react\";\nimport React from \"react\";\n\nconst shaders = Shaders.create({\n  negative: {\n    frag: GLSL`\n      precision highp float;\n      varying vec2 uv;\n      uniform sampler2D t;\n      uniform float factor;\n      \n      void main() {\n        vec4 c = texture2D(t, uv);\n\n        gl_FragColor = vec4(mix(c.rgb, 1.0 - c.rgb, factor), c.a);\n      }\n    `\n  }\n});\n\nexport const DefaultValue = 0;\n\nexport default function Negative({ factor = DefaultValue, children: t }) {\n  return (\n    <Node\n      shader={shaders.negative}\n      uniforms={{\n        factor,\n        t,\n      }}\n    />\n  )\n}\n"]}