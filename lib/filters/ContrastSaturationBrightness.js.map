{"version":3,"sources":["../../src/filters/ContrastSaturationBrightness.js"],"names":["ContrastSaturationBrightness","shaders","Shaders","create","csb","frag","GLSL","DefaultValue","Object","freeze","brightness","contrast","saturation","t","children"],"mappings":"0vCAsCwBA,4B,iSAnClBC,SAAUC,iBAAQC,MAAR,CAAe,CAC7BC,IAAK,CACHC,QAAMC,aAAN,kBADG,CADwB,CAAf,C,CA6BHC,kCAAeC,OAAOC,MAAP,CAAc,CACxCC,WAAY,CAD4B,CAExCC,SAAU,CAF8B,CAGxCC,WAAY,CAH4B,CAAd,C,CAMb,QAASZ,6BAAT,GAKZ,SAJDU,UAIC,CAJDA,CAIC,YAJYH,aAAaG,UAIzB,OAHDC,QAGC,CAHDA,CAGC,YAHUJ,aAAaI,QAGvB,OAFDC,UAEC,CAFDA,CAEC,YAFYL,aAAaK,UAEzB,GADSC,CACT,GADDC,QACC,CACD,MACE,+BAAC,aAAD,EACE,OAAQb,QAAQG,GADlB,CAEE,SAAU,CACRM,YADQ,CAERC,UAFQ,CAGRC,YAHQ,CAIRC,GAJQ,CAFZ,EAUH","file":"ContrastSaturationBrightness.js","sourcesContent":["import { Shaders, Node, GLSL } from \"gl-react\";\nimport React from \"react\";\n\nconst shaders = Shaders.create({\n  csb: {\n    frag: GLSL`\n      precision highp float;\n      varying vec2 uv;\n      uniform sampler2D t;\n      \n      uniform float contrast;\n      uniform float saturation;\n      uniform float brightness;\n      \n      const vec3 L = vec3(0.2125, 0.7154, 0.0721);\n      \n      void main() {\n        vec4 c = texture2D(t, uv);\n        vec3 brt = c.rgb * brightness;\n        gl_FragColor = vec4(\n          mix(\n            vec3(0.5),\n            mix(vec3(dot(brt, L)), brt, saturation),\n            contrast\n          ),\n          c.a\n        );\n      }\n    `\n  }\n});\n\nexport const DefaultValue = Object.freeze({\n  brightness: 1,\n  contrast: 1,\n  saturation: 1,\n});\n\nexport default function ContrastSaturationBrightness({\n  brightness = DefaultValue.brightness,\n  contrast = DefaultValue.contrast,\n  saturation = DefaultValue.saturation,\n  children: t\n}) {\n  return (\n    <Node\n      shader={shaders.csb}\n      uniforms={{\n        brightness,\n        contrast,\n        saturation,\n        t,\n      }}\n    />\n  )\n}\n"]}